<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.malong.mapper.ProductMapper" >

    <resultMap id="BaseResultMap" type="com.malong.pojo.Product" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="category_id" property="categoryId" jdbcType="SMALLINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="image" property="image" jdbcType="VARCHAR" />
        <result column="maket_price" property="maketPrice" jdbcType="DECIMAL" />
        <result column="price" property="price" jdbcType="DECIMAL" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="decription" property="decription" jdbcType="VARCHAR" />
        <result column="product_number" property="productNumber" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, category_id, name, image, maket_price, price, status, decription, product_number
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.malong.pojo.ProductExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from product
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from product
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from product
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="com.malong.pojo.ProductExample" >
        delete from product
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.malong.pojo.Product" >
        insert into product (id, category_id, name, 
            image, maket_price, price, 
            status, decription, product_number
            )
        values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=SMALLINT}, #{name,jdbcType=VARCHAR}, 
            #{image,jdbcType=VARCHAR}, #{maketPrice,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, 
            #{status,jdbcType=TINYINT}, #{decription,jdbcType=VARCHAR}, #{productNumber,jdbcType=VARCHAR}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.malong.pojo.Product" >
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="categoryId != null" >
                category_id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="image != null" >
                image,
            </if>
            <if test="maketPrice != null" >
                maket_price,
            </if>
            <if test="price != null" >
                price,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="decription != null" >
                decription,
            </if>
            <if test="productNumber != null" >
                product_number,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="categoryId != null" >
                #{categoryId,jdbcType=SMALLINT},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="image != null" >
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="maketPrice != null" >
                #{maketPrice,jdbcType=DECIMAL},
            </if>
            <if test="price != null" >
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="status != null" >
                #{status,jdbcType=TINYINT},
            </if>
            <if test="decription != null" >
                #{decription,jdbcType=VARCHAR},
            </if>
            <if test="productNumber != null" >
                #{productNumber,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.malong.pojo.ProductExample" resultType="java.lang.Integer" >
        select count(*) from product
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update product
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.categoryId != null" >
                category_id = #{record.categoryId,jdbcType=SMALLINT},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.image != null" >
                image = #{record.image,jdbcType=VARCHAR},
            </if>
            <if test="record.maketPrice != null" >
                maket_price = #{record.maketPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.price != null" >
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.decription != null" >
                decription = #{record.decription,jdbcType=VARCHAR},
            </if>
            <if test="record.productNumber != null" >
                product_number = #{record.productNumber,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update product
        set id = #{record.id,jdbcType=INTEGER},
            category_id = #{record.categoryId,jdbcType=SMALLINT},
            name = #{record.name,jdbcType=VARCHAR},
            image = #{record.image,jdbcType=VARCHAR},
            maket_price = #{record.maketPrice,jdbcType=DECIMAL},
            price = #{record.price,jdbcType=DECIMAL},
            status = #{record.status,jdbcType=TINYINT},
            decription = #{record.decription,jdbcType=VARCHAR},
            product_number = #{record.productNumber,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.malong.pojo.Product" >
        update product
        <set >
            <if test="categoryId != null" >
                category_id = #{categoryId,jdbcType=SMALLINT},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="image != null" >
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="maketPrice != null" >
                maket_price = #{maketPrice,jdbcType=DECIMAL},
            </if>
            <if test="price != null" >
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="decription != null" >
                decription = #{decription,jdbcType=VARCHAR},
            </if>
            <if test="productNumber != null" >
                product_number = #{productNumber,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.malong.pojo.Product" >
        update product
        set category_id = #{categoryId,jdbcType=SMALLINT},
            name = #{name,jdbcType=VARCHAR},
            image = #{image,jdbcType=VARCHAR},
            maket_price = #{maketPrice,jdbcType=DECIMAL},
            price = #{price,jdbcType=DECIMAL},
            status = #{status,jdbcType=TINYINT},
            decription = #{decription,jdbcType=VARCHAR},
            product_number = #{productNumber,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>